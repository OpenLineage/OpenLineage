[bumpversion]
current_version = 0.30.0
commit = False
tag = False
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)(?P<rc>.*)
serialize = 
	{major}.{minor}.{patch}{rc}
	{major}.{minor}.{patch}

[bumpversion:file:setup.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bumpversion:file:openlineage/airflow/version.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[tool:pytest]
addopts = -p no:warnings

[mypy]
ignore_missing_imports = True
disable_error_code = attr-defined

[tox:tox]
envlist = 
	py3-airflow-{2.1.4,2.2.4,2.3.4,2.4.3,2.5.0}
skipsdist = True

[testenv]
usedevelop = True
install_command = python -m pip install {opts} --find-links target/wheels/ \
	--find-links ../sql/iface-py/target/wheels \
	--use-deprecated=legacy-resolver \
	--constraint=https://raw.githubusercontent.com/apache/airflow/constraints-{env:AIRFLOW_VERSION}/constraints-3.8.txt \
	{packages}
deps = -r dev-requirements.txt
	pytest
	pytest-mock
	mypy>=0.9.6
	airflow-2.1.4: apache-airflow==2.1.4
	airflow-2.2.4: apache-airflow==2.2.4
	airflow-2.3.4: apache-airflow==2.3.4
	airflow-2.4.3: apache-airflow==2.4.3
	airflow-2.5.0: apache-airflow==2.5.0
whitelist_externals = bash
commands = ruff .
	bash -ec "if [[ ! -f $0/airflow.db ]]; then airflow db reset -y; fi" {envdir}
	python -m pytest --cov=openlineage --junitxml=test-results/junit.xml
	coverage xml
setenv = 
	AIRFLOW__CORE__SQL_ALCHEMY_CONN = sqlite:///{envdir}/airflow.db
	AIRFLOW_HOME = {envdir}
	PYTHONPATH = {toxinidir}/tests
	AIRFLOW__CORE__LOGGING_CONFIG_CLASS = log_config.LOGGING_CONFIG
	airflow-2.1.4: AIRFLOW_VERSION = 2.1.4
	airflow-2.2.4: AIRFLOW_VERSION = 2.2.4
	airflow-2.3.4: AIRFLOW_VERSION = 2.3.4
	airflow-2.4.3: AIRFLOW_VERSION = 2.4.3
	airflow-2.5.0: AIRFLOW_VERSION = 2.5.0

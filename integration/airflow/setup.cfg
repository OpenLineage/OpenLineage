[bumpversion]
current_version = 0.13.0
commit = False
tag = False
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)(?P<rc>.*)
serialize = 
	{major}.{minor}.{patch}{rc}
	{major}.{minor}.{patch}

[bumpversion:file:setup.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bumpversion:file:openlineage/airflow/version.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[flake8]
max-line-length = 99

[tool:pytest]
addopts = -p no:warnings

[mypy]
ignore_missing_imports = True
disable_error_code = attr-defined

[tox:tox]
envlist = 
	py3-airflow-{1.10.15,2.1.4,2.3.1}
skipsdist = True

[testenv]
usedevelop = True
install_command = python -m pip install {opts} --find-links target/wheels/ --find-links ../sql/target/wheels {packages}
deps = -r dev-requirements-2.x.txt
	pytest
	mypy>=0.9.6
	codecov>=1.4.0
	airflow-2.1.4: apache-airflow==2.1.4
	airflow-2.3.1: apache-airflow==2.3.1
whitelist_externals = bash
commands = flake8 --extend-exclude tests/integration,scripts/
	bash -ec "if [[ ! -f $0/airflow.db ]]; then airflow db reset -y; fi" {envdir}
	pytest --cov=openlineage --junitxml=test-results/junit.xml
	coverage xml
setenv = 
	AIRFLOW__CORE__SQL_ALCHEMY_CONN = sqlite:///{envdir}/airflow.db
	AIRFLOW_HOME = {envdir}

[testenv:py3-airflow-1.10.15]
install_command = python -m pip install {opts} --find-links target/wheels/ --find-links ../sql/target/wheels --use-deprecated=legacy-resolver {packages}
commands = flake8 --extend-exclude tests/integration,scripts/
	bash -ec "if [[ ! -f $0/airflow.db ]]; then airflow resetdb -y; fi" {envdir}
	pytest --cov=openlineage --junitxml=test-results/junit.xml
	coverage xml
deps = pytest
	mypy>=0.9.6
	codecov>=1.4.0
	-r dev-requirements-1.x.txt
	-chttps://raw.githubusercontent.com/apache/airflow/constraints-1.10.15/constraints-3.7.txt

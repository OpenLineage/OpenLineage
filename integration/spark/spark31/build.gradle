plugins {
    id("java-library")
    id("pmd")
    id("com.diffplug.spotless")
    id("io.freefair.lombok")
    id("io.openlineage.common-config")
    id("io.openlineage.scala-variants")
}

// We configure this variant build, because of convention. Apache Spark 3.1.x is only compiled
// with Scala 2.12, however, this configuration adds important things for the broader project.
scalaVariants {
    create("2.12")
}

ext {
    assertjVersion = "3.25.1"
    junit5Version = "5.10.1"
    mockitoVersion = "4.11.0"
    sparkVersion = project.findProperty("spark31.spark.version")
}

configurations.configureEach {
    resolutionStrategy.eachDependency {
        if (requested.group == "org.scala-lang" && requested.name == "scala-library") {
            if (requested.version.startsWith("2.12")) {
                useVersion("2.12.15")
            }
            if (requested.version.startsWith("2.13")) {
                useVersion("2.13.10")
            }
        }
    }
}

dependencies {
    compileOnly(project(path: ":shared", configuration: "scala212RuntimeElements"))
    compileOnly(project(path: ":spark3", configuration: "scala212RuntimeElements"))
    compileOnly("org.apache.spark:spark-sql_2.12:${sparkVersion}")

    testImplementation(project(path: ":shared", configuration: "scala212RuntimeElements"))
    testImplementation(project(path: ":spark3", configuration: "scala212RuntimeElements"))
    testImplementation("org.apache.spark:spark-sql_2.12:${sparkVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junit5Version}")
    testImplementation("org.junit.jupiter:junit-jupiter:${junit5Version}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("org.mockito:mockito-core:${mockitoVersion}")
    testImplementation("org.mockito:mockito-inline:${mockitoVersion}")

    // Scala 2.12 - we need this, because of convention. Its just duplication from the above for this specific module
    scala212CompileOnly(project(path: ":shared", configuration: "scala212RuntimeElements"))
    scala212CompileOnly(project(path: ":spark3", configuration: "scala212RuntimeElements"))
    scala212CompileOnly("org.apache.spark:spark-sql_2.12:${sparkVersion}")

    testScala212Implementation(project(path: ":shared", configuration: "scala212RuntimeElements"))
    testScala212Implementation(project(path: ":spark3", configuration: "scala212RuntimeElements"))
    testScala212Implementation("org.apache.spark:spark-sql_2.12:${sparkVersion}")
    testScala212Implementation("org.junit.jupiter:junit-jupiter-api:${junit5Version}")
    testScala212Implementation("org.junit.jupiter:junit-jupiter:${junit5Version}")
    testScala212Implementation("org.assertj:assertj-core:${assertjVersion}")
    testScala212Implementation("org.mockito:mockito-core:${mockitoVersion}")
    testScala212Implementation("org.mockito:mockito-inline:${mockitoVersion}")
}

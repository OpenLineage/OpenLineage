plugins {
    id("io.openlineage.common-config")
    id 'java-test-fixtures'
    id "com.adarshr.test-logger" version "3.2.0"
    id "org.gradle.test-retry" version "1.5.8"
}

archivesBaseName = 'openlineage-spark-spark3'

ext {
    assertjVersion = '3.25.1'
    junit5Version = '5.10.1'
    mockitoVersion = '4.11.0'
    sparkVersion = '3.5.0'
    jacksonVersion = '2.15.3'
    lombokVersion = '1.18.30'
    bigqueryVersion = '0.29.0'
}

dependencies {
    implementation(project(path: ":shared"))
    implementation(project(":spark3"))

    compileOnly "org.apache.spark:spark-core_2.12:${sparkVersion}"
    compileOnly "org.apache.spark:spark-sql_2.12:${sparkVersion}"
    compileOnly "org.apache.spark:spark-hive_2.12:${sparkVersion}"
    compileOnly "org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}"
    compileOnly "org.scala-lang.modules:scala-collection-compat_2.12:2.11.0"
    compileOnly("com.google.cloud.spark:spark-bigquery-with-dependencies_2.12:${bigqueryVersion}") {
        exclude group: 'com.fasterxml.jackson.core'
        exclude group: 'com.fasterxml.jackson.module'
        exclude group: 'com.sun.jmx'
        exclude group: 'com.sun.jdmk'
        exclude group: 'javax.jms'
    }

    testFixturesApi "com.fasterxml.jackson.module:jackson-module-scala_2.12:${jacksonVersion}"
    testFixturesApi "org.apache.spark:spark-core_2.12:${sparkVersion}"
    testFixturesApi "org.apache.spark:spark-sql_2.12:${sparkVersion}"
    testFixturesApi "org.apache.spark:spark-hive_2.12:${sparkVersion}"
    testFixturesApi "org.apache.spark:spark-catalyst_2.12:${sparkVersion}"
    testFixturesApi "org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}"
    testFixturesApi "org.apache.iceberg:iceberg-spark-runtime-3.4_2.12:1.3.1"
    testFixturesApi "org.scala-lang.modules:scala-collection-compat_2.12:2.11.0"


    testFixturesApi "org.junit.jupiter:junit-jupiter:${junit5Version}"
    testFixturesApi "org.assertj:assertj-core:${assertjVersion}"
    testFixturesApi "org.mockito:mockito-core:${mockitoVersion}"
    testFixturesApi "org.mockito:mockito-inline:${mockitoVersion}"
    testFixturesApi "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
    testFixturesApi(project(path: ":shared"))
}

def commonTestConfiguration = {
    forkEvery 1
    maxParallelForks 5
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
    systemProperties = [
            'junit.platform.output.capture.stdout': 'true',
            'junit.platform.output.capture.stderr': 'true',
            'spark.version'                       : "${sparkVersion}",
            'openlineage.spark.jar'               : "${archivesBaseName}-${project.version}.jar",
            'kafka.package.version'               : "org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}",
            'mockserver.logLevel'                 : 'ERROR'
    ]

    classpath = project.sourceSets.test.runtimeClasspath
}

test {
    configure commonTestConfiguration
    useJUnitPlatform {
        excludeTags 'integration-test'
    }
}

plugins {
    id("java-library")
    id("pmd")
    id("com.diffplug.spotless")
    id("io.freefair.lombok")
    id("io.openlineage.common-config")
    id("io.openlineage.scala-variants")
    id("idea")
}

scalaVariants {
    create("2.12")
    create("2.13")
}

idea {
    module {
        testSources.from(sourceSets.testScala212.java.srcDirs, sourceSets.testScala213.java.srcDirs)
    }
}

ext {
    assertjVersion = "3.25.1"
    awaitilityVersion = "4.2.0"
    bigqueryVersion = "0.29.0"
    databricksVersion = "0.1.4"
    junit5Version = "5.10.1"
    kafkaClientsVersion = "3.6.1"
    mockitoVersion = "4.11.0"
    mockserverVersion = "5.14.0"
    postgresqlVersion = "42.7.1"
    sqlLiteVersion = "3.45.0.0"
    testcontainersVersion = "1.19.3"

    sparkVersion = project.findProperty("shared.spark.version")
    sparkSeries = sparkVersion.substring(0, 3)
    scalaBinaryVersion = project.findProperty("scala.binary.version")
}

dependencies {
    // Design time dependencies
    api("io.openlineage:openlineage-java:${project.version}")
    api("io.openlineage:openlineage-sql-java:${project.version}")

    compileOnly("org.apache.spark:spark-hive_${scalaBinaryVersion}:${sparkVersion}")
    compileOnly("org.apache.spark:spark-sql-kafka-0-10_${scalaBinaryVersion}:${sparkVersion}")
    compileOnly("org.apache.spark:spark-sql_${scalaBinaryVersion}:${sparkVersion}")

    compileOnly("com.databricks:databricks-dbutils-scala_${scalaBinaryVersion}:${databricksVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
    }
    compileOnly("com.google.cloud.spark:spark-bigquery-with-dependencies_${scalaBinaryVersion}:${bigqueryVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.module")
    }

    // TODO: Convert these to testImplementation
    testImplementation(platform("org.junit:junit-bom:${junit5Version}"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.postgresql:postgresql:${postgresqlVersion}")
    testImplementation("org.xerial:sqlite-jdbc:${sqlLiteVersion}")
    testImplementation("org.apache.kafka:kafka-clients:${kafkaClientsVersion}")
    testImplementation("org.mock-server:mockserver-client-java:${mockserverVersion}") {
        exclude(group: "com.google.guava")
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.datatype")
        exclude(group: "com.fasterxml.jackson.dataformat")
    }
    testImplementation("org.awaitility:awaitility:${awaitilityVersion}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("org.mockito:mockito-core:${mockitoVersion}")
    testImplementation("org.mockito:mockito-inline:${mockitoVersion}")
    testImplementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")

    testImplementation("org.apache.spark:spark-hive_${scalaBinaryVersion}:${sparkVersion}")
    testImplementation("org.apache.spark:spark-sql-kafka-0-10_${scalaBinaryVersion}:${sparkVersion}")
    testImplementation("org.apache.spark:spark-sql_${scalaBinaryVersion}:${sparkVersion}")

    testImplementation("com.databricks:databricks-dbutils-scala_${scalaBinaryVersion}:${databricksVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
    }
    testImplementation("com.google.cloud.spark:spark-bigquery-with-dependencies_${scalaBinaryVersion}:${bigqueryVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.module")
    }

    // Scala 2.12 dependencies
    scala212Api("io.openlineage:openlineage-java:${project.version}")
    scala212Api("io.openlineage:openlineage-sql-java:${project.version}")

    scala212CompileOnly("org.apache.spark:spark-hive_2.12:${sparkVersion}")
    scala212CompileOnly("org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}")
    scala212CompileOnly("org.apache.spark:spark-sql_2.12:${sparkVersion}")

    scala212CompileOnly("com.databricks:databricks-dbutils-scala_2.12:${databricksVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
    }
    scala212CompileOnly("com.google.cloud.spark:spark-bigquery-with-dependencies_2.12:${bigqueryVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.module")
    }

    testScala212Implementation("org.apache.spark:spark-hive_2.12:${sparkVersion}")
    testScala212Implementation("org.apache.spark:spark-sql-kafka-0-10_2.12:${sparkVersion}")
    testScala212Implementation("org.apache.spark:spark-sql_2.12:${sparkVersion}")

    testScala212Implementation("com.databricks:databricks-dbutils-scala_2.12:${databricksVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
    }
    testScala212Implementation("com.google.cloud.spark:spark-bigquery-with-dependencies_2.12:${bigqueryVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.module")
    }

    testScala212Implementation("org.apache.kafka:kafka-clients:${kafkaClientsVersion}")
    testScala212Implementation("org.assertj:assertj-core:${assertjVersion}")
    testScala212Implementation("org.awaitility:awaitility:${awaitilityVersion}")
    testScala212Implementation(platform("org.junit:junit-bom:${junit5Version}"))
    testScala212Implementation("org.junit.jupiter:junit-jupiter")
    testScala212Implementation("org.junit.jupiter:junit-jupiter-params")
    testScala212Implementation("org.mockito:mockito-core:${mockitoVersion}")
    testScala212Implementation("org.mockito:mockito-inline:${mockitoVersion}")
    testScala212Implementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
    testScala212Implementation("org.mock-server:mockserver-client-java:${mockserverVersion}") {
        exclude(group: "com.google.guava", module: "guava")
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.datatype")
        exclude(group: "com.fasterxml.jackson.dataformat")
    }
    testScala212Implementation("org.postgresql:postgresql:${postgresqlVersion}")
    testScala212Implementation("org.xerial:sqlite-jdbc:${sqlLiteVersion}")

    // Scala 2.13 dependencies
    scala213Api("io.openlineage:openlineage-java:${project.version}")
    scala213Api("io.openlineage:openlineage-sql-java:${project.version}")

    scala213CompileOnly("org.apache.spark:spark-hive_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.spark:spark-sql-kafka-0-10_2.13:${sparkVersion}")
    scala213CompileOnly("org.apache.spark:spark-sql_2.13:${sparkVersion}")

    scala213CompileOnly("com.databricks:databricks-dbutils-scala_2.13:${databricksVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
    }
    scala213CompileOnly("com.google.cloud.spark:spark-bigquery-with-dependencies_2.13:${bigqueryVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.module")
    }

    testScala213Implementation("org.apache.spark:spark-hive_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.spark:spark-sql-kafka-0-10_2.13:${sparkVersion}")
    testScala213Implementation("org.apache.spark:spark-sql_2.13:${sparkVersion}")

    testScala213Implementation("com.databricks:databricks-dbutils-scala_2.13:${databricksVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
    }
    testScala213Implementation("com.google.cloud.spark:spark-bigquery-with-dependencies_2.13:${bigqueryVersion}") {
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.module")
    }

    testScala213Implementation("org.apache.kafka:kafka-clients:${kafkaClientsVersion}")
    testScala213Implementation("org.assertj:assertj-core:${assertjVersion}")
    testScala213Implementation("org.awaitility:awaitility:${awaitilityVersion}")
    testScala213Implementation(platform("org.junit:junit-bom:${junit5Version}"))
    testScala213Implementation("org.junit.jupiter:junit-jupiter")
    testScala213Implementation("org.junit.jupiter:junit-jupiter-params")
    testScala213Implementation("org.mockito:mockito-core:${mockitoVersion}")
    testScala213Implementation("org.mockito:mockito-inline:${mockitoVersion}")
    testScala213Implementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
    testScala213Implementation("org.mock-server:mockserver-client-java:${mockserverVersion}") {
        exclude(group: "com.google.guava", module: "guava")
        exclude(group: "com.fasterxml.jackson.core")
        exclude(group: "com.fasterxml.jackson.datatype")
        exclude(group: "com.fasterxml.jackson.dataformat")
    }
    testScala213Implementation("org.postgresql:postgresql:${postgresqlVersion}")
    testScala213Implementation("org.xerial:sqlite-jdbc:${sqlLiteVersion}")
}

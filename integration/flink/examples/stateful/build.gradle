plugins {
    id 'java-library'
    id 'jacoco'
    id 'pmd'
    id "com.adarshr.test-logger" version "4.0.0"
    id 'com.diffplug.spotless' version '6.23.0'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
    id "com.google.protobuf" version "0.9.4"
}

repositories {
    gradlePluginPortal()
    mavenCentral()
    maven { url "https://packages.confluent.io/maven/" }
    mavenLocal()
}

group 'io.openlineage.flink'

shadowJar {
    zip64 true
    manifest {
        attributes 'Main-Class': 'io.openlineage.flink.FlinkStatefulApplication'
    }
}

ext {
    flinkVersion = project.getProperty('flink.version')
    flinkVersionShort = flinkVersion.substring(0,4)
    hadoopVersion = '3.3.1'

    versionsMap = [
            "1.15": ["cassandra": "1.15.4", "kafka": flinkVersion, "jdbc": "1.15.4", "iceberg": "1.3.0", "alternativeShort": "1.15", "protobuf": "NA"],
            "1.16": ["cassandra": "3.0.0-1.16", "kafka": flinkVersion, "jdbc": "1.16.3", "iceberg": "1.3.0", "alternativeShort": "1.16", "protobuf": flinkVersion],
            "1.17": ["cassandra": "3.1.0-1.17", "kafka": flinkVersion, "jdbc": "3.1.1-1.17", "iceberg": "1.3.0", "alternativeShort": "1.17", "protobuf": flinkVersion],
            "1.18": ["cassandra": "3.1.0-1.17", "kafka": "3.0.2-1.18", "jdbc": "3.1.2-1.18", "iceberg": "1.5.0", "alternativeShort": "1.18", "protobuf": flinkVersion],
            "1.19": ["cassandra": "3.1.0-1.17", "kafka": "3.0.2-1.18", "jdbc": "3.1.2-1.18", "iceberg": "1.5.0", "alternativeShort": "1.18", "protobuf": flinkVersion]
    ]

    versions = versionsMap[flinkVersionShort]
}

dependencies {
    configurations.all {
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j'
    }

    testRuntimeOnly "org.junit.jupiter:junit-jupiter:5.10.2"
    testCompileOnly 'org.codehaus.groovy:groovy-all:3.0.20'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
    implementation 'org.awaitility:awaitility:4.2.0'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'

    implementation "io.openlineage:openlineage-flink:$project.version"
    compileOnly "org.apache.flink:flink-java:$flinkVersion"
    compileOnly "org.apache.flink:flink-streaming-scala_2.12:$flinkVersion"
    compileOnly "org.apache.flink:flink-streaming-java:$flinkVersion"
    compileOnly "org.apache.flink:flink-runtime-web:$flinkVersion"
    compileOnly "org.apache.flink:flink-core:$flinkVersion"
    compileOnly "org.apache.flink:flink-connector-base:$flinkVersion"
    implementation "org.apache.flink:flink-runtime:$flinkVersion"
    implementation "org.apache.flink:flink-connector-kafka:${versions.kafka}"
    implementation "org.apache.flink:flink-connector-jdbc:${versions.jdbc}"
    implementation "org.apache.flink:flink-connector-cassandra_2.12:${versions.cassandra}"
    implementation "org.apache.flink:flink-avro-confluent-registry:$flinkVersion"
    implementation "org.apache.flink:flink-avro:$flinkVersion"
    if (versions.protobuf != "NA") {
        implementation "org.apache.flink:flink-protobuf:${versions.protobuf}"
    }
    compileOnly "org.apache.flink:flink-table:$flinkVersion"
    compileOnly "org.apache.flink:flink-table-api-java:$flinkVersion"
    compileOnly "org.apache.flink:flink-table-api-java-bridge:$flinkVersion"
    compileOnly "org.apache.flink:flink-table-common:$flinkVersion"
    compileOnly "org.apache.flink:flink-table-runtime:$flinkVersion"
    compileOnly "org.apache.flink:flink-table-planner_2.12:$flinkVersion"

    implementation "com.typesafe:config:1.4.3"
    implementation "org.apache.avro:avro:1.11.3"
    implementation 'io.confluent:kafka-avro-serializer:7.6.0'
    implementation 'io.confluent:kafka-protobuf-serializer:7.6.0'
    implementation 'io.confluent:kafka-schema-registry-client:7.6.0'
    implementation 'com.github.davidmc24.gradle.plugin:gradle-avro-plugin:1.9.1'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation "org.apache.hadoop:hadoop-hdfs:$hadoopVersion"
    implementation "org.apache.hadoop:hadoop-common:$hadoopVersion"
    implementation("org.apache.hadoop:hadoop-minicluster:$hadoopVersion") {
        exclude group: 'org.apache.avro', module: 'avro'
    }
    implementation "org.apache.avro:avro"

    implementation "org.apache.iceberg:iceberg-flink-runtime-${versions.alternativeShort}:${versions.iceberg}"
    implementation "com.google.protobuf:protobuf-java:3.25.3"
}

assemble {
    dependsOn shadowJar
}

spotless {
    java {
        target project.fileTree(project.rootDir) {
            include 'build/classes/java/main/io/openlineage/flink/**/*.java'
            exclude '**/io/openlineage/flink/avro/**/*.*'
        }
    }
}

spotlessJava {
    dependsOn("compileJava", "compileTestJava", "generateAvroJava")
}

avro {
    fieldVisibility = 'PUBLIC'
}

compileJava {
    options.incremental = true
    options.compilerArgs << '-parameters'
    options.encoding = "UTF-8"
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

extractIncludeTestProto.enabled = false

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
}

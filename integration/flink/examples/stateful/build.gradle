plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id "com.adarshr.test-logger" version "3.2.0"
    id 'com.diffplug.spotless' version '6.12.0'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "pmd"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.5.0"
}

pmd {
    consoleOutput = true
    toolVersion = "6.46.0"
    rulesMinimumPriority = 5
    ruleSetFiles = rootProject.files("pmd-openlineage.xml")
    ruleSets = []
    ignoreFailures = true
}

pmdMain {
    excludes = [
        '**/InputEvent.java',
        '**/OutputEvent.java',
        '**/Counter.java',
    ]
    reports {
        html.required = true
    }
}

group 'io.openlineage.flink'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

jar.enabled = false
shadowJar {
    zip64 true
    manifest {
        attributes 'Main-Class': 'io.openlineage.flink.FlinkStatefulApplication'
    }
}

dependencies {
    implementation project(':')
    configurations.all {
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j'
    }

    testRuntimeOnly "org.junit.jupiter:junit-jupiter:5.9.1"
    testCompileOnly 'org.codehaus.groovy:groovy-all:3.0.14'
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'org.awaitility:awaitility:4.2.0'

    def flinkVersion = project.getProperty('flink.version')
    def flinkVersionShort = flinkVersion.substring(0,4)
    def flinkVersionWithScala212 = flinkVersion.contains('1.14') ? "_2.12:$flinkVersion" : ":$flinkVersion"
    def hadoopVersion = '3.3.1'
    implementation("io.openlineage:openlineage-java:$project.version")
    implementation "org.apache.flink:flink-java:$flinkVersion"
    implementation "org.apache.flink:flink-streaming-java$flinkVersionWithScala212"
    implementation "org.apache.flink:flink-runtime-web$flinkVersionWithScala212"
    implementation "org.apache.flink:flink-core:$flinkVersion"
    implementation "org.apache.flink:flink-runtime:$flinkVersion"
    implementation "org.apache.flink:flink-connector-kafka$flinkVersionWithScala212"
    implementation "org.apache.flink:flink-avro-confluent-registry:$flinkVersion"
    implementation "org.apache.flink:flink-avro:$flinkVersion"
    implementation "org.apache.flink:flink-table:$flinkVersion"
    implementation "org.apache.flink:flink-table-api-java:$flinkVersion"
    implementation "org.apache.flink:flink-table-api-java-bridge$flinkVersionWithScala212"
    implementation "org.apache.flink:flink-table-common:$flinkVersion"
    implementation "org.apache.flink:flink-table-runtime$flinkVersionWithScala212"
    implementation "org.apache.flink:flink-table-planner_2.12:$flinkVersion"

    implementation "com.typesafe:config:1.4.2"
    implementation "org.apache.avro:avro:1.11.1"
    implementation 'io.confluent:kafka-schema-registry-client:7.3.1'
    implementation 'io.confluent:kafka-avro-serializer:7.3.1'
    implementation 'com.github.davidmc24.gradle.plugin:gradle-avro-plugin:1.5.0'
    implementation "org.apache.hadoop:hadoop-hdfs:$hadoopVersion"
    implementation "org.apache.hadoop:hadoop-common:$hadoopVersion"
    implementation("org.apache.hadoop:hadoop-minicluster:$hadoopVersion") {
        exclude group: 'org.apache.avro', module: 'avro'
    }
    implementation "org.apache.avro:avro"

    compileOnly "org.apache.iceberg:iceberg-flink-$flinkVersionShort:0.14.0"
    implementation "org.apache.iceberg:iceberg-flink-runtime-$flinkVersionShort:0.14.0"
}

assemble {
    dependsOn shadowJar
}

avro {
    fieldVisibility = 'PUBLIC'
}

test {
    useJUnitPlatform()
}

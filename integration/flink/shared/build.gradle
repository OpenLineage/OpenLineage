/*
/* Copyright 2018-2023 contributors to the OpenLineage project
/* SPDX-License-Identifier: Apache-2.0
*/

import io.franzbecker.gradle.lombok.task.DelombokTask

plugins {
    id 'java-library'
    id 'jacoco'
    id 'com.adarshr.test-logger'
    id 'com.diffplug.spotless'
    id 'com.github.johnrengelman.shadow'
    id 'io.franzbecker.gradle-lombok'
    id 'io.openlineage.common-config'
}

configurations {
    lombok
}

group 'io.openlineage.flink'

task sourceJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("$buildDir/delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
    doFirst {
        outputDir.deleteDir()
    }
}

javadoc {
    dependsOn delombok
    source = delombok.outputDir
    options.tags = [ "apiNote" ]
}

def commonTestConfiguration = {
    classpath =  project.sourceSets.test.runtimeClasspath
}

test {
    configure commonTestConfiguration
    useJUnitPlatform {
        excludeTags 'integration-test'
    }
}

ext {
    flinkVersion = project.getProperty('flink.shared.version')
    flinkVersionShort = flinkVersion.substring(0,4)
    assertjVersion = '3.25.3'
    junit5Version = '5.10.2'
    lombokVersion = '1.18.30'
    mockitoVersion = '5.2.0'
    testcontainersVersion = '1.19.6'
    isReleaseVersion = !version.endsWith('SNAPSHOT')
    icebergVersion = "1.3.0"

    versionsMap = [
            "1.15": ["cassandra": "1.15.4", "kafka": flinkVersion, "jdbc": "1.15.4", "alternativeShort": "1.15"],
            "1.16": ["cassandra": "3.0.0-1.16", "kafka": flinkVersion, "jdbc": "1.16.3", "alternativeShort": "1.16"],
            "1.17": ["cassandra": "3.1.0-1.17", "kafka": flinkVersion, "jdbc": "3.1.1-1.17", "alternativeShort": "1.17"],
            "1.18": ["cassandra": "3.1.0-1.17", "kafka": "3.0.2-1.18", "jdbc": "3.1.2-1.18", "alternativeShort": "1.17"],
            "1.19": ["cassandra": "3.1.0-1.17", "kafka": "3.0.2-1.18", "jdbc": "3.1.2-1.18", "alternativeShort": "1.17"]
    ]

    versions = versionsMap[flinkVersionShort]
}

dependencies {
    api "io.openlineage:openlineage-java:${project.version}"
    api "io.openlineage:openlineage-sql-java:${project.version}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.apache.flink:flink-java:$flinkVersion"
    compileOnly "org.apache.flink:flink-streaming-java:$flinkVersion"
    compileOnly "org.apache.flink:flink-runtime-web:$flinkVersion"
    compileOnly "org.apache.flink:flink-table-common:$flinkVersion"
    compileOnly "org.apache.flink:flink-connector-base:$flinkVersion"
    compileOnly "org.apache.flink:flink-connector-kafka:${versions.kafka}"
    compileOnly "org.apache.flink:flink-connector-cassandra_2.12:${versions.cassandra}"
    compileOnly "org.apache.flink:flink-avro:$flinkVersion"
    compileOnly "org.apache.flink:flink-avro-confluent-registry:$flinkVersion"
    compileOnly "org.apache.iceberg:iceberg-flink-runtime-${versions.alternativeShort}:$icebergVersion"
    compileOnly "org.apache.flink:flink-connector-jdbc:${versions.jdbc}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'org.javassist:javassist:3.30.2-GA'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'

    testImplementation "org.apache.flink:flink-java:$flinkVersion"
    testImplementation "org.apache.flink:flink-streaming-java:$flinkVersion"
    testImplementation "org.apache.flink:flink-runtime-web:$flinkVersion"
    testImplementation "org.apache.flink:flink-connector-base:$flinkVersion"
    testImplementation "org.apache.flink:flink-connector-kafka:${versions.kafka}"
    testImplementation "org.apache.flink:flink-connector-cassandra_2.12:${versions.cassandra}"
    testImplementation "org.apache.flink:flink-connector-jdbc:${versions.jdbc}"
    testImplementation "org.apache.flink:flink-table-common:$flinkVersion"
    testImplementation "org.apache.flink:flink-avro:$flinkVersion"
    testImplementation "org.apache.flink:flink-avro-confluent-registry:$flinkVersion"
    testImplementation "org.apache.iceberg:iceberg-flink-runtime-${versions.alternativeShort}:$icebergVersion"
    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation "org.testcontainers:mockserver:${testcontainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation 'org.mock-server:mockserver-client-java:5.12.0'
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.2.0'
    testImplementation 'com.github.tomakehurst:wiremock:3.0.1'
    testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.23.0'

    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junit5Version}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junit5Version}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.projectlombok:lombok:${lombokVersion}"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}
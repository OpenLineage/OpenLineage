[
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [],
    "job": {
      "facets": {
        "sql": {
          "query": "with source as (\n    select * from default.raw_customers\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source\n\n)\n\nselect * from renamed",
          "dialect": "spark"
        }
      },
      "name": "default.jaffle_shop.stg_customers.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "first_name",
                "type": "string"
              },
              {
                "name": "last_name",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_customers",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [],
    "job": {
      "facets": {
        "sql": {
          "query": "with source as (\n    select * from default.raw_orders\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed",
          "dialect": "spark"
        }
      },
      "name": "default.jaffle_shop.stg_orders.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "order_date",
                "type": "date"
              },
              {
                "name": "status",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_orders",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [],
    "job": {
      "facets": {
        "sql": {
          "query": "with source as (\n    select * from default.raw_payments\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        -- `amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed",
          "dialect": "spark"
        }
      },
      "name": "default.jaffle_shop.stg_payments.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "payment_id",
                "type": "long"
              },
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "payment_method",
                "type": "string"
              },
              {
                "name": "amount",
                "type": "double"
              }
            ]
          }
        },
        "name": "default.stg_payments",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "first_name",
                "type": "string"
              },
              {
                "name": "last_name",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_customers",
        "namespace": "spark://localhost:10000"
      },
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "order_date",
                "type": "date"
              },
              {
                "name": "status",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_orders",
        "namespace": "spark://localhost:10000"
      },
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "payment_id",
                "type": "long"
              },
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "payment_method",
                "type": "string"
              },
              {
                "name": "amount",
                "type": "double"
              }
            ]
          }
        },
        "name": "default.stg_payments",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {
        "sql": {
          "query": "with customers as (\n\n    select * from default.stg_customers\n\n),\n\norders as (\n\n    select * from default.stg_orders\n\n),\n\npayments as (\n\n    select * from default.stg_payments\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final",
          "dialect": "spark"
        }
      },
      "name": "default.jaffle_shop.customers.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "description": "This is a unique identifier for a customer",
                "name": "customer_id"
              },
              {
                "description": "Customer's first name. PII.",
                "name": "first_name"
              },
              {
                "description": "Customer's last name. PII.",
                "name": "last_name"
              },
              {
                "description": "Date (UTC) of a customer's first order",
                "name": "first_order"
              },
              {
                "description": "Date (UTC) of a customer's most recent order",
                "name": "most_recent_order"
              },
              {
                "description": "Count of the number of orders a customer has placed",
                "name": "number_of_orders"
              },
              {
                "description": "Total value (AUD) of a customer's orders",
                "name": "total_order_amount"
              }
            ]
          }
        },
        "name": "default.customers",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "order_date",
                "type": "date"
              },
              {
                "name": "status",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_orders",
        "namespace": "spark://localhost:10000"
      },
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "payment_id",
                "type": "long"
              },
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "payment_method",
                "type": "string"
              },
              {
                "name": "amount",
                "type": "double"
              }
            ]
          }
        },
        "name": "default.stg_payments",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {
        "sql": {
          "query": "\n\nwith orders as (\n\n    select * from default.stg_orders\n\n),\n\npayments as (\n\n    select * from default.stg_payments\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by order_id\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n\n    left join order_payments\n        on orders.order_id = order_payments.order_id\n\n)\n\nselect * from final",
          "dialect": "spark"
        }
      },
      "name": "default.jaffle_shop.orders.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "name": "default.orders",
        "namespace": "spark://localhost:10000",
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "description": "This is a unique identifier for an order",
                "name": "order_id",
                "type": "long"
              },
              {
                "description": "Foreign key to the customers table",
                "name": "customer_id",
                "type": "long"
              },
              {
                "description": "Date (UTC) that the order was placed",
                "name": "order_date",
                "type": "date"
              },
              {
                "description": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |",
                "name": "status",
                "type": "string"
              },
              {
                "description": "Amount of the order (AUD) paid for by credit card",
                "name": "credit_card_amount",
                "type": "double"
              },
              {
                "description": "Amount of the order (AUD) paid for by coupon",
                "name": "coupon_amount",
                "type": "double"
              },
              {
                "description": "Amount of the order (AUD) paid for by bank transfer",
                "name": "bank_transfer_amount",
                "type": "double"
              },
              {
                "description": "Amount of the order (AUD) paid for by gift card",
                "name": "gift_card_amount",
                "type": "double"
              },
              {
                "description": "Total amount (AUD) of the order",
                "name": "amount",
                "type": "double"
              }
            ]
          }
        },
        "outputFacets": {
          "outputStatistics": {
            "size": 4722
          }
        }
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "accepted_values",
                "column": "status",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "bank_transfer_amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "coupon_amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "credit_card_amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "customer_id",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "gift_card_amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "order_id",
                "success": true
              },
              {
                "assertion": "relationships",
                "column": "customer_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "order_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.orders",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.orders.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "not_null",
                "column": "customer_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "customer_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.stg_customers",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.stg_customers.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "accepted_values",
                "column": "payment_method",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "payment_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "payment_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.stg_payments",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.stg_payments.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "accepted_values",
                "column": "status",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "order_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "order_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.stg_orders",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.stg_orders.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "START",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "not_null",
                "column": "customer_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "customer_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.customers",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.customers.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [],
    "job": {
      "facets": {
        "sql": {
          "query": "with source as (\n    select * from default.raw_customers\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source\n\n)\n\nselect * from renamed",
          "dialect": "spark"
        }
      },
      "name": "default.jaffle_shop.stg_customers.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "first_name",
                "type": "string"
              },
              {
                "name": "last_name",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_customers",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [],
    "job": {
      "facets": {
        "sql": {
          "query": "with source as (\n    select * from default.raw_orders\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed",
          "dialect": "spark"
        }
      },
      "name": "default.jaffle_shop.stg_orders.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "order_date",
                "type": "date"
              },
              {
                "name": "status",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_orders",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [],
    "job": {
      "facets": {
        "sql": {
          "query": "with source as (\n    select * from default.raw_payments\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        -- `amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed",
          "dialect": "spark"
        }
      },
      "name": "default.jaffle_shop.stg_payments.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "payment_id",
                "type": "long"
              },
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "payment_method",
                "type": "string"
              },
              {
                "name": "amount",
                "type": "double"
              }
            ]
          }
        },
        "name": "default.stg_payments",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "first_name",
                "type": "string"
              },
              {
                "name": "last_name",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_customers",
        "namespace": "spark://localhost:10000"
      },
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "order_date",
                "type": "date"
              },
              {
                "name": "status",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_orders",
        "namespace": "spark://localhost:10000"
      },
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "payment_id",
                "type": "long"
              },
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "payment_method",
                "type": "string"
              },
              {
                "name": "amount",
                "type": "double"
              }
            ]
          }
        },
        "name": "default.stg_payments",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {
        "sql": {
          "query": "with customers as (\n\n    select * from default.stg_customers\n\n),\n\norders as (\n\n    select * from default.stg_orders\n\n),\n\npayments as (\n\n    select * from default.stg_payments\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final"
        }
      },
      "name": "default.jaffle_shop.customers.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "description": "This is a unique identifier for a customer",
                "name": "customer_id"
              },
              {
                "description": "Customer's first name. PII.",
                "name": "first_name"
              },
              {
                "description": "Customer's last name. PII.",
                "name": "last_name"
              },
              {
                "description": "Date (UTC) of a customer's first order",
                "name": "first_order"
              },
              {
                "description": "Date (UTC) of a customer's most recent order",
                "name": "most_recent_order"
              },
              {
                "description": "Count of the number of orders a customer has placed",
                "name": "number_of_orders"
              },
              {
                "description": "Total value (AUD) of a customer's orders",
                "name": "total_order_amount"
              }
            ]
          }
        },
        "name": "default.customers",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "customer_id",
                "type": "long"
              },
              {
                "name": "order_date",
                "type": "date"
              },
              {
                "name": "status",
                "type": "string"
              }
            ]
          }
        },
        "name": "default.stg_orders",
        "namespace": "spark://localhost:10000"
      },
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "name": "payment_id",
                "type": "long"
              },
              {
                "name": "order_id",
                "type": "long"
              },
              {
                "name": "payment_method",
                "type": "string"
              },
              {
                "name": "amount",
                "type": "double"
              }
            ]
          }
        },
        "name": "default.stg_payments",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {
        "sql": {
          "query": "\n\nwith orders as (\n\n    select * from default.stg_orders\n\n),\n\npayments as (\n\n    select * from default.stg_payments\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by order_id\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n\n    left join order_payments\n        on orders.order_id = order_payments.order_id\n\n)\n\nselect * from final"
        }
      },
      "name": "default.jaffle_shop.orders.build.run",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "spark://localhost:10000",
            "uri": "spark://localhost:10000"
          },
          "schema": {
            "fields": [
              {
                "description": "This is a unique identifier for an order",
                "name": "order_id",
                "type": "long"
              },
              {
                "description": "Foreign key to the customers table",
                "name": "customer_id",
                "type": "long"
              },
              {
                "description": "Date (UTC) that the order was placed",
                "name": "order_date",
                "type": "date"
              },
              {
                "description": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |",
                "name": "status",
                "type": "string"
              },
              {
                "description": "Amount of the order (AUD) paid for by credit card",
                "name": "credit_card_amount",
                "type": "double"
              },
              {
                "description": "Amount of the order (AUD) paid for by coupon",
                "name": "coupon_amount",
                "type": "double"
              },
              {
                "description": "Amount of the order (AUD) paid for by bank transfer",
                "name": "bank_transfer_amount",
                "type": "double"
              },
              {
                "description": "Amount of the order (AUD) paid for by gift card",
                "name": "gift_card_amount",
                "type": "double"
              },
              {
                "description": "Total amount (AUD) of the order",
                "name": "amount",
                "type": "double"
              }
            ]
          }
        },
        "name": "default.orders",
        "namespace": "spark://localhost:10000",
        "outputFacets": {}
      }
    ],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "accepted_values",
                "column": "status",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "bank_transfer_amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "coupon_amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "credit_card_amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "customer_id",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "gift_card_amount",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "order_id",
                "success": true
              },
              {
                "assertion": "relationships",
                "column": "customer_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "order_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.orders",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.orders.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "not_null",
                "column": "customer_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "customer_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.stg_customers",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.stg_customers.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "accepted_values",
                "column": "payment_method",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "payment_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "payment_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.stg_payments",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.stg_payments.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "accepted_values",
                "column": "status",
                "success": true
              },
              {
                "assertion": "not_null",
                "column": "order_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "order_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.stg_orders",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.stg_orders.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  },
  {
    "eventTime": "{{ is_datetime(result) }}",
    "eventType": "COMPLETE",
    "inputs": [
      {
        "inputFacets": {
          "dataQualityAssertions": {
            "assertions": [
              {
                "assertion": "not_null",
                "column": "customer_id",
                "success": true
              },
              {
                "assertion": "unique",
                "column": "customer_id",
                "success": true
              }
            ]
          }
        },
        "name": "default.customers",
        "namespace": "spark://localhost:10000"
      }
    ],
    "job": {
      "facets": {},
      "name": "default.jaffle_shop.customers.build.test",
      "namespace": "job-namespace"
    },
    "outputs": [],
    "producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
    "run": {
      "facets": {
        "dbt_version": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://github.com/OpenLineage/OpenLineage/tree/main/integration/common/openlineage/schema/dbt-version-run-facet.json",
          "version": "1.0.0"
        },
        "processing_engine": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-1/ProcessingEngineRunFacet.json#/$defs/ProcessingEngineRunFacet",
          "name": "dbt",
          "version": "1.0.0",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "_producer": "https://github.com/OpenLineage/OpenLineage/tree/0.0.1/integration/dbt",
          "_schemaURL": "https://openlineage.io/spec/facets/1-1-0/ParentRunFacet.json#/$defs/ParentRunFacet",
          "run": {
            "runId": "{{ any(result) }}"
          },
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "a10ef908-878c-4bce-bf00-8d00e24f3d8a"
        }
      }
    }
  }
]

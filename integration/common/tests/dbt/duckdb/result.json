[
  {
    "eventType": "START",
    "inputs": [],
    "job": {
      "facets": {
        "jobType": {
          "integration": "DBT",
          "jobType": "MODEL",
          "processingType": "BATCH"
        },
        "sql": {
          "query": "with customers as (\n\n    select * from \"jaffle_shop\".\"main\".\"stg_customers\"\n\n),\n\norders as (\n\n    select * from \"jaffle_shop\".\"main\".\"stg_orders\"\n\n),\n\npayments as (\n\n    select * from \"jaffle_shop\".\"main\".\"stg_payments\"\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final",
          "dialect": "duckdb"
        }
      },
      "name": "jaffle_shop.main.jaffle_shop.customers",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "duckdb:///database/jaffle_shop.duckdb",
            "uri": "duckdb:///database/jaffle_shop.duckdb"
          },
          "documentation": {
            "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders"
          },
          "schema": {
            "fields": [
              {
                "description": "This is a unique identifier for a customer",
                "name": "customer_id"
              },
              {
                "description": "Customer's first name. PII.",
                "name": "first_name"
              },
              {
                "description": "Customer's last name. PII.",
                "name": "last_name"
              },
              {
                "description": "Date (UTC) of a customer's first order",
                "name": "first_order"
              },
              {
                "description": "Date (UTC) of a customer's most recent order",
                "name": "most_recent_order"
              },
              {
                "description": "Count of the number of orders a customer has placed",
                "name": "number_of_orders"
              },
              {
                "description": "Total value (AUD) of a customer's orders",
                "name": "total_order_amount"
              }
            ]
          }
        },
        "name": "jaffle_shop.main.customers",
        "namespace": "duckdb:///database/jaffle_shop.duckdb"
      }
    ],
    "run": {
      "facets": {
        "dbt_version": {
          "version": "1.8.9"
        },
        "processing_engine": {
          "name": "dbt",
          "version": "1.8.9",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        },
        "dbt_run": {
          "invocation_id": "d205f9ce-0e55-4a5f-9f69-bfa170867a41"
        }
      }
    }
  },
  {
    "eventType": "COMPLETE",
    "inputs": [],
    "job": {
      "facets": {
        "jobType": {
          "integration": "DBT",
          "jobType": "MODEL",
          "processingType": "BATCH"
        },
        "sql": {
          "query": "with customers as (\n\n    select * from \"jaffle_shop\".\"main\".\"stg_customers\"\n\n),\n\norders as (\n\n    select * from \"jaffle_shop\".\"main\".\"stg_orders\"\n\n),\n\npayments as (\n\n    select * from \"jaffle_shop\".\"main\".\"stg_payments\"\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final",
          "dialect": "duckdb"
        }
      },
      "name": "jaffle_shop.main.jaffle_shop.customers",
      "namespace": "job-namespace"
    },
    "outputs": [
      {
        "facets": {
          "dataSource": {
            "name": "duckdb:///database/jaffle_shop.duckdb",
            "uri": "duckdb:///database/jaffle_shop.duckdb"
          },
          "documentation": {
            "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders"
          },
          "schema": {
            "fields": [
              {
                "description": "This is a unique identifier for a customer",
                "name": "customer_id"
              },
              {
                "description": "Customer's first name. PII.",
                "name": "first_name"
              },
              {
                "description": "Customer's last name. PII.",
                "name": "last_name"
              },
              {
                "description": "Date (UTC) of a customer's first order",
                "name": "first_order"
              },
              {
                "description": "Date (UTC) of a customer's most recent order",
                "name": "most_recent_order"
              },
              {
                "description": "Count of the number of orders a customer has placed",
                "name": "number_of_orders"
              },
              {
                "description": "Total value (AUD) of a customer's orders",
                "name": "total_order_amount"
              }
            ]
          }
        },
        "name": "jaffle_shop.main.customers",
        "namespace": "duckdb:///database/jaffle_shop.duckdb"
      }
    ],
    "run": {
      "facets": {
        "dbt_version": {
          "version": "1.8.9"
        },
        "processing_engine": {
          "name": "dbt",
          "version": "1.8.9",
          "openlineageAdapterVersion": "{{ any(result) }}"
        },
        "parent": {
          "job": {
            "name": "dbt-job-name",
            "namespace": "dbt"
          }
        }
      }
    }
  }
]

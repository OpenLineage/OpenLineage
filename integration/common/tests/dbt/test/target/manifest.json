{
    "metadata": {
        "dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v2.json",
        "dbt_version": "0.20.0",
        "generated_at": "2021-08-23T15:06:17.932164Z",
        "invocation_id": "9adc7020-c784-4179-a4e3-e3c4ffb3b09c",
        "env": {},
        "project_id": "dc5b36ac8a5ba619cc093366efe36d3d",
        "user_id": "7bae5953-769e-4aa1-81f6-55a82ac4d4d4",
        "send_anonymous_usage_stats": true,
        "adapter_type": "bigquery"
    },
    "nodes": {
        "model.dbt_bigquery_test.test_third_dbt_model": {
            "raw_sql": "{{ config(materialized='table') }}\n\nselect first.id as id, second.id as second_id \nfrom {{ ref('test_second_dbt_model') }} as first\njoin {{ ref('test_second_parallel_dbt_model') }} as second\non first.id = second.id",
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": [
                    "model.dbt_bigquery_test.test_second_dbt_model",
                    "model.dbt_bigquery_test.test_second_parallel_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1",
            "fqn": [
                "dbt_bigquery_test",
                "example",
                "test_third_dbt_model"
            ],
            "unique_id": "model.dbt_bigquery_test.test_third_dbt_model",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "example/test_third_dbt_model.sql",
            "original_file_path": "models/example/test_third_dbt_model.sql",
            "name": "test_third_dbt_model",
            "alias": "test_third_dbt_model",
            "checksum": {
                "name": "sha256",
                "checksum": "e3a6a46f7588f42712f49e9c41feeca702a23b1566a654ae95122bae69c15654"
            },
            "tags": [],
            "refs": [
                [
                    "test_second_dbt_model"
                ],
                [
                    "test_second_parallel_dbt_model"
                ]
            ],
            "sources": [],
            "description": "A starter dbt model",
            "columns": {
                "id": {
                    "name": "id",
                    "description": "The primary key of first parallel model",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "second_id": {
                    "name": "second_id",
                    "description": "The primary key of second parallel model",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "dbt_bigquery_test://models/example/schema.yml",
            "compiled_path": null,
            "build_path": null,
            "deferred": false,
            "unrendered_config": {
                "materialized": "table"
            },
            "created_at": 1629731179
        },
        "model.dbt_bigquery_test.test_second_parallel_dbt_model": {
            "raw_sql": "select *\nfrom {{ source('dbt_test1', 'source_table') }}\nwhere id = 1\nbork bork fail",
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": [
                    "source.dbt_bigquery_test.dbt_test1.source_table"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "view",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1",
            "fqn": [
                "dbt_bigquery_test",
                "example",
                "test_second_parallel_dbt_model"
            ],
            "unique_id": "model.dbt_bigquery_test.test_second_parallel_dbt_model",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "example/test_second_parallel_dbt_model.sql",
            "original_file_path": "models/example/test_second_parallel_dbt_model.sql",
            "name": "test_second_parallel_dbt_model",
            "alias": "test_second_parallel_dbt_model",
            "checksum": {
                "name": "sha256",
                "checksum": "93bb3d22d248345423d0aa934ab4b3cc89fce04c14bc44469eb6989edec9e11e"
            },
            "tags": [],
            "refs": [],
            "sources": [
                [
                    "dbt_test1",
                    "source_table"
                ]
            ],
            "description": "A starter dbt model",
            "columns": {
                "id": {
                    "name": "id",
                    "description": "The primary key for this table",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "dbt_bigquery_test://models/example/schema.yml",
            "compiled_path": null,
            "build_path": null,
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179
        },
        "model.dbt_bigquery_test.test_second_dbt_model": {
            "raw_sql": "select *\nfrom {{ ref('test_first_dbt_model') }}\nwhere id = 1",
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": [
                    "model.dbt_bigquery_test.test_first_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "view",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1",
            "fqn": [
                "dbt_bigquery_test",
                "example",
                "test_second_dbt_model"
            ],
            "unique_id": "model.dbt_bigquery_test.test_second_dbt_model",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "example/test_second_dbt_model.sql",
            "original_file_path": "models/example/test_second_dbt_model.sql",
            "name": "test_second_dbt_model",
            "alias": "test_second_dbt_model",
            "checksum": {
                "name": "sha256",
                "checksum": "7f0490b21e22d862b7af0547c60ac186464da8a89df7961821d972d83f246374"
            },
            "tags": [],
            "refs": [
                [
                    "test_first_dbt_model"
                ]
            ],
            "sources": [],
            "description": "A starter dbt model",
            "columns": {
                "id": {
                    "name": "id",
                    "description": "The primary key for this table",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "dbt_bigquery_test://models/example/schema.yml",
            "compiled_path": null,
            "build_path": null,
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179
        },
        "model.dbt_bigquery_test.test_first_dbt_model": {
            "raw_sql": "{{ config(materialized='table') }}\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect id\nfrom source_data",
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": []
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1",
            "fqn": [
                "dbt_bigquery_test",
                "example",
                "test_first_dbt_model"
            ],
            "unique_id": "model.dbt_bigquery_test.test_first_dbt_model",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "example/test_first_dbt_model.sql",
            "original_file_path": "models/example/test_first_dbt_model.sql",
            "name": "test_first_dbt_model",
            "alias": "test_first_dbt_model",
            "checksum": {
                "name": "sha256",
                "checksum": "381a67a1368d6ba7c8edb0a0403bc1f2106ad136aee93e7fd4ce21a97bec84d4"
            },
            "tags": [],
            "refs": [],
            "sources": [],
            "description": "A starter dbt model",
            "columns": {
                "id": {
                    "name": "id",
                    "description": "The primary key for this table",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "dbt_bigquery_test://models/example/schema.yml",
            "compiled_path": null,
            "build_path": null,
            "deferred": false,
            "unrendered_config": {
                "materialized": "table"
            },
            "created_at": 1629731179
        },
        "test.dbt_bigquery_test.unique_test_first_dbt_model_id.1f3ee5c4a1": {
            "raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_first_dbt_model') }} where {{config.get('where')}}) test_first_dbt_model{% else %}{{ ref('test_first_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_first_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "unique_test_first_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.unique_test_first_dbt_model_id.1f3ee5c4a1",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/unique_test_first_dbt_model_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "unique_test_first_dbt_model_id",
            "alias": "unique_test_first_dbt_model_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_first_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_first_dbt_model_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_first_dbt_model_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect\n    id,\n    count(*) as n_records\n\nfrom `random-gcp-project`.`dbt_test1`.`test_first_dbt_model`\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`unique_test_first_dbt_model_id`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.not_null_test_first_dbt_model_id.a8c5d0180a": {
            "raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_first_dbt_model') }} where {{config.get('where')}}) test_first_dbt_model{% else %}{{ ref('test_first_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_first_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "not_null_test_first_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.not_null_test_first_dbt_model_id.a8c5d0180a",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/not_null_test_first_dbt_model_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "not_null_test_first_dbt_model_id",
            "alias": "not_null_test_first_dbt_model_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_first_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_first_dbt_model_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_first_dbt_model_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect *\nfrom `random-gcp-project`.`dbt_test1`.`test_first_dbt_model`\nwhere id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`not_null_test_first_dbt_model_id`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.dbt_expectations_expect_column_values_to_not_be_null_test_first_dbt_model_id.2da7e7b96e": {
            "raw_sql": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_177e5e4ed27ab51efa28f8ff7a38e5fb\") }}",
            "test_metadata": {
                "name": "expect_column_values_to_not_be_null",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_first_dbt_model') }} where {{config.get('where')}}) test_first_dbt_model{% else %}{{ ref('test_first_dbt_model') }}{% endif %}"
                },
                "namespace": "dbt_expectations"
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt_expectations.test_expect_column_values_to_not_be_null",
                    "macro.dbt_expectations.expression_is_true",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_first_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": "dbt_expectations_expect_column_177e5e4ed27ab51efa28f8ff7a38e5fb",
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "dbt_expectations_expect_column_values_to_not_be_null_test_first_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.dbt_expectations_expect_column_values_to_not_be_null_test_first_dbt_model_id.2da7e7b96e",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/dbt_expectations_expect_column_177e5e4ed27ab51efa28f8ff7a38e5fb.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "dbt_expectations_expect_column_values_to_not_be_null_test_first_dbt_model_id",
            "alias": "dbt_expectations_expect_column_177e5e4ed27ab51efa28f8ff7a38e5fb",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_first_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/dbt_expectations_expect_column_177e5e4ed27ab51efa28f8ff7a38e5fb.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/dbt_expectations_expect_column_177e5e4ed27ab51efa28f8ff7a38e5fb.sql",
            "deferred": false,
            "unrendered_config": {
                "alias": "dbt_expectations_expect_column_177e5e4ed27ab51efa28f8ff7a38e5fb"
            },
            "created_at": 1629731179,
            "compiled_sql": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  id is not null as expression\n\n\n    from `random-gcp-project`.`dbt_test1`.`test_first_dbt_model`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`dbt_expectations_expect_column_177e5e4ed27ab51efa28f8ff7a38e5fb`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.dbt_expectations_expect_column_median_to_be_between_test_first_dbt_model_id__21__7.98cdd3d9df": {
            "raw_sql": "{{ dbt_expectations.test_expect_column_median_to_be_between(**_dbt_schema_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_42ed9d072f1ef4fbba645e65ad4585ba\") }}",
            "test_metadata": {
                "name": "expect_column_median_to_be_between",
                "kwargs": {
                    "min_value": 7,
                    "max_value": 21,
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_first_dbt_model') }} where {{config.get('where')}}) test_first_dbt_model{% else %}{{ ref('test_first_dbt_model') }}{% endif %}"
                },
                "namespace": "dbt_expectations"
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt_expectations.test_expect_column_median_to_be_between",
                    "macro.dbt_expectations.median",
                    "macro.dbt_expectations.expression_between",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_first_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": "dbt_expectations_expect_column_42ed9d072f1ef4fbba645e65ad4585ba",
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "dbt_expectations_expect_column_median_to_be_between_test_first_dbt_model_id__21__7"
            ],
            "unique_id": "test.dbt_bigquery_test.dbt_expectations_expect_column_median_to_be_between_test_first_dbt_model_id__21__7.98cdd3d9df",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/dbt_expectations_expect_column_42ed9d072f1ef4fbba645e65ad4585ba.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "dbt_expectations_expect_column_median_to_be_between_test_first_dbt_model_id__21__7",
            "alias": "dbt_expectations_expect_column_42ed9d072f1ef4fbba645e65ad4585ba",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_first_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/dbt_expectations_expect_column_42ed9d072f1ef4fbba645e65ad4585ba.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/dbt_expectations_expect_column_42ed9d072f1ef4fbba645e65ad4585ba.sql",
            "deferred": false,
            "unrendered_config": {
                "alias": "dbt_expectations_expect_column_42ed9d072f1ef4fbba645e65ad4585ba"
            },
            "created_at": 1629731179,
            "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and percentile_cont(id, 0.5)\n    over() >= 7 and percentile_cont(id, 0.5)\n    over() <= 21\n)\n as expression\n\n\n    from `random-gcp-project`.`dbt_test1`.`test_first_dbt_model`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`dbt_expectations_expect_column_42ed9d072f1ef4fbba645e65ad4585ba`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.dbt_expectations_expect_column_quantile_values_to_be_between_test_first_dbt_model_id__2__0__0_95.7d02be244f": {
            "raw_sql": "{{ dbt_expectations.test_expect_column_quantile_values_to_be_between(**_dbt_schema_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_d022aaa18f7eaf98a4880853937cfe66\") }}",
            "test_metadata": {
                "name": "expect_column_quantile_values_to_be_between",
                "kwargs": {
                    "quantile": 0.95,
                    "min_value": 0,
                    "max_value": 2,
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_first_dbt_model') }} where {{config.get('where')}}) test_first_dbt_model{% else %}{{ ref('test_first_dbt_model') }}{% endif %}"
                },
                "namespace": "dbt_expectations"
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between",
                    "macro.dbt_expectations.percentile_cont",
                    "macro.dbt_expectations.expression_between",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_first_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": "dbt_expectations_expect_column_d022aaa18f7eaf98a4880853937cfe66",
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "dbt_expectations_expect_column_quantile_values_to_be_between_test_first_dbt_model_id__2__0__0_95"
            ],
            "unique_id": "test.dbt_bigquery_test.dbt_expectations_expect_column_quantile_values_to_be_between_test_first_dbt_model_id__2__0__0_95.7d02be244f",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/dbt_expectations_expect_column_d022aaa18f7eaf98a4880853937cfe66.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "dbt_expectations_expect_column_quantile_values_to_be_between_test_first_dbt_model_id__2__0__0_95",
            "alias": "dbt_expectations_expect_column_d022aaa18f7eaf98a4880853937cfe66",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_first_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/dbt_expectations_expect_column_d022aaa18f7eaf98a4880853937cfe66.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/dbt_expectations_expect_column_d022aaa18f7eaf98a4880853937cfe66.sql",
            "deferred": false,
            "unrendered_config": {
                "alias": "dbt_expectations_expect_column_d022aaa18f7eaf98a4880853937cfe66"
            },
            "created_at": 1629731179,
            "compiled_sql": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and percentile_cont(id, 0.95)\n    over() >= 0 and percentile_cont(id, 0.95)\n    over() <= 2\n)\n as expression\n\n\n    from `random-gcp-project`.`dbt_test1`.`test_first_dbt_model`\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`dbt_expectations_expect_column_d022aaa18f7eaf98a4880853937cfe66`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.unique_test_second_dbt_model_id.ba8cd8dfe1": {
            "raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_second_dbt_model') }} where {{config.get('where')}}) test_second_dbt_model{% else %}{{ ref('test_second_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_second_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "unique_test_second_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.unique_test_second_dbt_model_id.ba8cd8dfe1",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/unique_test_second_dbt_model_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "unique_test_second_dbt_model_id",
            "alias": "unique_test_second_dbt_model_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_second_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_second_dbt_model_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_second_dbt_model_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect\n    id,\n    count(*) as n_records\n\nfrom `random-gcp-project`.`dbt_test1`.`test_second_dbt_model`\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`unique_test_second_dbt_model_id`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.not_null_test_second_dbt_model_id.6458075b2a": {
            "raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_second_dbt_model') }} where {{config.get('where')}}) test_second_dbt_model{% else %}{{ ref('test_second_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_second_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "not_null_test_second_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.not_null_test_second_dbt_model_id.6458075b2a",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/not_null_test_second_dbt_model_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "not_null_test_second_dbt_model_id",
            "alias": "not_null_test_second_dbt_model_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_second_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_second_dbt_model_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_second_dbt_model_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect *\nfrom `random-gcp-project`.`dbt_test1`.`test_second_dbt_model`\nwhere id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`not_null_test_second_dbt_model_id`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.unique_test_second_parallel_dbt_model_id.d59ed1725f": {
            "raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_second_parallel_dbt_model') }} where {{config.get('where')}}) test_second_parallel_dbt_model{% else %}{{ ref('test_second_parallel_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_second_parallel_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "unique_test_second_parallel_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.unique_test_second_parallel_dbt_model_id.d59ed1725f",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/unique_test_second_parallel_dbt_model_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "unique_test_second_parallel_dbt_model_id",
            "alias": "unique_test_second_parallel_dbt_model_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_second_parallel_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_second_parallel_dbt_model_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_second_parallel_dbt_model_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect\n    id,\n    count(*) as n_records\n\nfrom `random-gcp-project`.`dbt_test1`.`test_second_parallel_dbt_model`\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`unique_test_second_parallel_dbt_model_id`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.not_null_test_second_parallel_dbt_model_id.92c37ea38b": {
            "raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_second_parallel_dbt_model') }} where {{config.get('where')}}) test_second_parallel_dbt_model{% else %}{{ ref('test_second_parallel_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_second_parallel_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "not_null_test_second_parallel_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.not_null_test_second_parallel_dbt_model_id.92c37ea38b",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/not_null_test_second_parallel_dbt_model_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "not_null_test_second_parallel_dbt_model_id",
            "alias": "not_null_test_second_parallel_dbt_model_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_second_parallel_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_second_parallel_dbt_model_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_second_parallel_dbt_model_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect *\nfrom `random-gcp-project`.`dbt_test1`.`test_second_parallel_dbt_model`\nwhere id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`not_null_test_second_parallel_dbt_model_id`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.unique_test_third_dbt_model_id.66d6711da6": {
            "raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_third_dbt_model') }} where {{config.get('where')}}) test_third_dbt_model{% else %}{{ ref('test_third_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_third_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "unique_test_third_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.unique_test_third_dbt_model_id.66d6711da6",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/unique_test_third_dbt_model_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "unique_test_third_dbt_model_id",
            "alias": "unique_test_third_dbt_model_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_third_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_third_dbt_model_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_third_dbt_model_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect\n    id,\n    count(*) as n_records\n\nfrom `random-gcp-project`.`dbt_test1`.`test_third_dbt_model`\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`unique_test_third_dbt_model_id`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.not_null_test_third_dbt_model_id.ee37a1e1fb": {
            "raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_third_dbt_model') }} where {{config.get('where')}}) test_third_dbt_model{% else %}{{ ref('test_third_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_third_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "not_null_test_third_dbt_model_id"
            ],
            "unique_id": "test.dbt_bigquery_test.not_null_test_third_dbt_model_id.ee37a1e1fb",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/not_null_test_third_dbt_model_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "not_null_test_third_dbt_model_id",
            "alias": "not_null_test_third_dbt_model_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_third_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_third_dbt_model_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_third_dbt_model_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect *\nfrom `random-gcp-project`.`dbt_test1`.`test_third_dbt_model`\nwhere id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`not_null_test_third_dbt_model_id`",
            "column_name": "id"
        },
        "test.dbt_bigquery_test.unique_test_third_dbt_model_second_id.f3c38f3b89": {
            "raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "second_id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_third_dbt_model') }} where {{config.get('where')}}) test_third_dbt_model{% else %}{{ ref('test_third_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_third_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "unique_test_third_dbt_model_second_id"
            ],
            "unique_id": "test.dbt_bigquery_test.unique_test_third_dbt_model_second_id.f3c38f3b89",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/unique_test_third_dbt_model_second_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "unique_test_third_dbt_model_second_id",
            "alias": "unique_test_third_dbt_model_second_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_third_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_third_dbt_model_second_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/unique_test_third_dbt_model_second_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect\n    second_id,\n    count(*) as n_records\n\nfrom `random-gcp-project`.`dbt_test1`.`test_third_dbt_model`\nwhere second_id is not null\ngroup by second_id\nhaving count(*) > 1\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`unique_test_third_dbt_model_second_id`",
            "column_name": "second_id"
        },
        "test.dbt_bigquery_test.not_null_test_third_dbt_model_second_id.808ed9e604": {
            "raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "second_id",
                    "model": "{% if config.get('where') %}(select * from {{ ref('test_third_dbt_model') }} where {{config.get('where')}}) test_third_dbt_model{% else %}{{ ref('test_third_dbt_model') }}{% endif %}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null",
                    "macro.dbt.should_store_failures",
                    "macro.dbt.statement"
                ],
                "nodes": [
                    "model.dbt_bigquery_test.test_third_dbt_model"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "test",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": "dbt_test__audit",
                "database": null,
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "store_failures": null,
                "where": null,
                "limit": null,
                "fail_calc": "count(*)",
                "warn_if": "!= 0",
                "error_if": "!= 0",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "random-gcp-project",
            "schema": "dbt_test1_dbt_test__audit",
            "fqn": [
                "dbt_bigquery_test",
                "schema_test",
                "not_null_test_third_dbt_model_second_id"
            ],
            "unique_id": "test.dbt_bigquery_test.not_null_test_third_dbt_model_second_id.808ed9e604",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "schema_test/not_null_test_third_dbt_model_second_id.sql",
            "original_file_path": "models/example/schema.yml",
            "name": "not_null_test_third_dbt_model_second_id",
            "alias": "not_null_test_third_dbt_model_second_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "test_third_dbt_model"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "compiled_path": "target/compiled/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_third_dbt_model_second_id.sql",
            "build_path": "target/run/dbt_bigquery_test/models/example/schema.yml/schema_test/not_null_test_third_dbt_model_second_id.sql",
            "deferred": false,
            "unrendered_config": {},
            "created_at": 1629731179,
            "compiled_sql": "\n    \n    \n\nselect *\nfrom `random-gcp-project`.`dbt_test1`.`test_third_dbt_model`\nwhere second_id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "`random-gcp-project`.`dbt_test1_dbt_test__audit`.`not_null_test_third_dbt_model_second_id`",
            "column_name": "second_id"
        }
    },
    "sources": {
        "source.dbt_bigquery_test.dbt_test1.source_table": {
            "fqn": [
                "dbt_bigquery_test",
                "example",
                "dbt_test1",
                "source_table"
            ],
            "database": "random-gcp-project",
            "schema": "dbt_test1",
            "unique_id": "source.dbt_bigquery_test.dbt_test1.source_table",
            "package_name": "dbt_bigquery_test",
            "root_path": "/home/dbt/code/dbt-test",
            "path": "models/example/schema.yml",
            "original_file_path": "models/example/schema.yml",
            "name": "source_table",
            "source_name": "dbt_test1",
            "source_description": "",
            "loader": "",
            "identifier": "source_table",
            "resource_type": "source",
            "quoting": {
                "database": null,
                "schema": null,
                "identifier": null,
                "column": null
            },
            "loaded_at_field": null,
            "freshness": {
                "warn_after": null,
                "error_after": null,
                "filter": null
            },
            "external": null,
            "description": "",
            "columns": {},
            "meta": {},
            "source_meta": {},
            "tags": [],
            "config": {
                "enabled": true
            },
            "patch_path": null,
            "unrendered_config": {},
            "relation_name": "`random-gcp-project`.`dbt_test1`.`source_table`",
            "created_at": 1629731179
        }
    },
    "macros": {},
    "docs": {
        "dbt.__overview__": {
            "unique_id": "dbt.__overview__",
            "package_name": "dbt",
            "root_path": "/home/dbt/tools/pyenv/versions/3.7.3/lib/python3.7/site-packages/dbt/include/global_project",
            "path": "overview.md",
            "original_file_path": "docs/overview.md",
            "name": "__overview__",
            "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--models` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [chat](https://community.getdbt.com/) on Slack for live questions and support."
        }
    },
    "exposures": {},
    "selectors": {},
    "disabled": [],
    "parent_map": {
        "model.dbt_bigquery_test.test_third_dbt_model": [
            "model.dbt_bigquery_test.test_second_dbt_model",
            "model.dbt_bigquery_test.test_second_parallel_dbt_model"
        ],
        "model.dbt_bigquery_test.test_second_parallel_dbt_model": [
            "source.dbt_bigquery_test.dbt_test1.source_table"
        ],
        "model.dbt_bigquery_test.test_second_dbt_model": [
            "model.dbt_bigquery_test.test_first_dbt_model"
        ],
        "model.dbt_bigquery_test.test_first_dbt_model": [],
        "test.dbt_bigquery_test.unique_test_first_dbt_model_id.1f3ee5c4a1": [
            "model.dbt_bigquery_test.test_first_dbt_model"
        ],
        "test.dbt_bigquery_test.not_null_test_first_dbt_model_id.a8c5d0180a": [
            "model.dbt_bigquery_test.test_first_dbt_model"
        ],
        "test.dbt_bigquery_test.dbt_expectations_expect_column_values_to_not_be_null_test_first_dbt_model_id.2da7e7b96e": [
            "model.dbt_bigquery_test.test_first_dbt_model"
        ],
        "test.dbt_bigquery_test.dbt_expectations_expect_column_median_to_be_between_test_first_dbt_model_id__21__7.98cdd3d9df": [
            "model.dbt_bigquery_test.test_first_dbt_model"
        ],
        "test.dbt_bigquery_test.dbt_expectations_expect_column_quantile_values_to_be_between_test_first_dbt_model_id__2__0__0_95.7d02be244f": [
            "model.dbt_bigquery_test.test_first_dbt_model"
        ],
        "test.dbt_bigquery_test.unique_test_second_dbt_model_id.ba8cd8dfe1": [
            "model.dbt_bigquery_test.test_second_dbt_model"
        ],
        "test.dbt_bigquery_test.not_null_test_second_dbt_model_id.6458075b2a": [
            "model.dbt_bigquery_test.test_second_dbt_model"
        ],
        "test.dbt_bigquery_test.unique_test_second_parallel_dbt_model_id.d59ed1725f": [
            "model.dbt_bigquery_test.test_second_parallel_dbt_model"
        ],
        "test.dbt_bigquery_test.not_null_test_second_parallel_dbt_model_id.92c37ea38b": [
            "model.dbt_bigquery_test.test_second_parallel_dbt_model"
        ],
        "test.dbt_bigquery_test.unique_test_third_dbt_model_id.66d6711da6": [
            "model.dbt_bigquery_test.test_third_dbt_model"
        ],
        "test.dbt_bigquery_test.not_null_test_third_dbt_model_id.ee37a1e1fb": [
            "model.dbt_bigquery_test.test_third_dbt_model"
        ],
        "test.dbt_bigquery_test.unique_test_third_dbt_model_second_id.f3c38f3b89": [
            "model.dbt_bigquery_test.test_third_dbt_model"
        ],
        "test.dbt_bigquery_test.not_null_test_third_dbt_model_second_id.808ed9e604": [
            "model.dbt_bigquery_test.test_third_dbt_model"
        ],
        "source.dbt_bigquery_test.dbt_test1.source_table": []
    },
    "child_map": {
        "model.dbt_bigquery_test.test_third_dbt_model": [
            "test.dbt_bigquery_test.not_null_test_third_dbt_model_id.ee37a1e1fb",
            "test.dbt_bigquery_test.not_null_test_third_dbt_model_second_id.808ed9e604",
            "test.dbt_bigquery_test.unique_test_third_dbt_model_id.66d6711da6",
            "test.dbt_bigquery_test.unique_test_third_dbt_model_second_id.f3c38f3b89"
        ],
        "model.dbt_bigquery_test.test_second_parallel_dbt_model": [
            "model.dbt_bigquery_test.test_third_dbt_model",
            "test.dbt_bigquery_test.not_null_test_second_parallel_dbt_model_id.92c37ea38b",
            "test.dbt_bigquery_test.unique_test_second_parallel_dbt_model_id.d59ed1725f"
        ],
        "model.dbt_bigquery_test.test_second_dbt_model": [
            "model.dbt_bigquery_test.test_third_dbt_model",
            "test.dbt_bigquery_test.not_null_test_second_dbt_model_id.6458075b2a",
            "test.dbt_bigquery_test.unique_test_second_dbt_model_id.ba8cd8dfe1"
        ],
        "model.dbt_bigquery_test.test_first_dbt_model": [
            "model.dbt_bigquery_test.test_second_dbt_model",
            "test.dbt_bigquery_test.dbt_expectations_expect_column_median_to_be_between_test_first_dbt_model_id__21__7.98cdd3d9df",
            "test.dbt_bigquery_test.dbt_expectations_expect_column_quantile_values_to_be_between_test_first_dbt_model_id__2__0__0_95.7d02be244f",
            "test.dbt_bigquery_test.dbt_expectations_expect_column_values_to_not_be_null_test_first_dbt_model_id.2da7e7b96e",
            "test.dbt_bigquery_test.not_null_test_first_dbt_model_id.a8c5d0180a",
            "test.dbt_bigquery_test.unique_test_first_dbt_model_id.1f3ee5c4a1"
        ],
        "test.dbt_bigquery_test.unique_test_first_dbt_model_id.1f3ee5c4a1": [],
        "test.dbt_bigquery_test.not_null_test_first_dbt_model_id.a8c5d0180a": [],
        "test.dbt_bigquery_test.dbt_expectations_expect_column_values_to_not_be_null_test_first_dbt_model_id.2da7e7b96e": [],
        "test.dbt_bigquery_test.dbt_expectations_expect_column_median_to_be_between_test_first_dbt_model_id__21__7.98cdd3d9df": [],
        "test.dbt_bigquery_test.dbt_expectations_expect_column_quantile_values_to_be_between_test_first_dbt_model_id__2__0__0_95.7d02be244f": [],
        "test.dbt_bigquery_test.unique_test_second_dbt_model_id.ba8cd8dfe1": [],
        "test.dbt_bigquery_test.not_null_test_second_dbt_model_id.6458075b2a": [],
        "test.dbt_bigquery_test.unique_test_second_parallel_dbt_model_id.d59ed1725f": [],
        "test.dbt_bigquery_test.not_null_test_second_parallel_dbt_model_id.92c37ea38b": [],
        "test.dbt_bigquery_test.unique_test_third_dbt_model_id.66d6711da6": [],
        "test.dbt_bigquery_test.not_null_test_third_dbt_model_id.ee37a1e1fb": [],
        "test.dbt_bigquery_test.unique_test_third_dbt_model_second_id.f3c38f3b89": [],
        "test.dbt_bigquery_test.not_null_test_third_dbt_model_second_id.808ed9e604": [],
        "source.dbt_bigquery_test.dbt_test1.source_table": [
            "model.dbt_bigquery_test.test_second_parallel_dbt_model"
        ]
    }
}

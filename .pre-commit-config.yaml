repos:
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: insert-license
        name: Add license for all Python files
        files: \.py$|\.pyi$|\.sh$
        args:
          - --comment-style
          - "#"
          - --license-filepath
          - LICENSE.insert.txt
          - --fuzzy-match-generates-todo
          - --use-current-year
      - id: insert-license
        name: Add license for all Java files
        files: \.java$|\.groovy$|\.gradle$
        args:
          - --comment-style
          - "/*|/*|*/"
          - --license-filepath
          - LICENSE.insert.txt
          - --fuzzy-match-generates-todo
          - --use-current-year
      - id: insert-license
        name: Add license for all Scala files
        files: \.kt$|\.scala$
        args:
          - --comment-style
          - "/** | *| */"
          - --license-filepath
          - LICENSE.insert.txt
          - --fuzzy-match-generates-todo
          - --use-current-year
      - id: insert-license
        name: Add license for all Rust files
        files: \.rs$
        args:
          - --comment-style
          - "//"
          - --license-filepath
          - LICENSE.insert.txt
          - --fuzzy-match-generates-todo
          - --use-current-year
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-ast
        files: ^client/python/
      - id: check-builtin-literals
        files: ^client/python/
      - id: check-merge-conflict
        files: ^client/python/
      - id: check-toml
        files: ^client/python/
      - id: debug-statements
        files: ^client/python/
      - id: end-of-file-fixer
        files: ^client/python/
      - id: trailing-whitespace
        files: ^client/python/
        exclude: ^.*\.cfg$
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.3
    hooks:
      - id: ruff
        name: ruff-lint
        args: [--fix]
        files: ^client/python/|^dev/|^integration/airflow/|^integration/common/|^integration/dbt/|^integration/spark/|^integration/sql/
      - id: ruff-format
        name: ruff-format
        files: ^client/python/|^dev/|^integration/airflow/|^integration/common/|^integration/dbt/|^integration/spark/|^integration/sql/
  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        name: Run codespell to check for common misspellings in files
        entry:
          bash -c 'echo "If you think that this failure is an error, consider adding the word(s) to the codespell
          dictionary at spelling_wordlist.txt. The word(s) should be in lowercase." && exec codespell "$@"' --
        language: python
        types: [text]
        args:
          - --ignore-words=spelling_wordlist.txt
          - --skip=*.css,*.js,*.svg,*.xml,*/**/test/*,*/**/tests/*,*/yarn.lock,**/openapi/*.html,*/package-lock.json,*/spec/*
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.10.0
    hooks:
      - id: shellcheck
        args: ["--exclude=1090,1091,2207"]
        exclude: ".*gradlew$"
  - repo: local
    hooks:
      - id: check-version-files
        name: Check version file paths in new-version.sh
        description: "Verifies that file paths in new-version.sh exist and are only defined in that file"
        language: script
        entry: .pre_commit/check_version_update_path.sh
        files: new-version\.sh$|\.gradle$|gradle\.properties$|README\.md$|version\.properties$
        pass_filenames: false
      - id: forbid-attr-s
        name: Check for @attr.s
        description: "Checks if @attr.s is used instead of desired @attr.define"
        language: system
        entry:
          bash -c 'grep -n -E "@attr\.s" "$@" && exit 1 || rc=$?; if [ $rc -eq 1 ]; then exit 0; else exit $rc; fi' --
        files: "\\.(py|md)$"
        # Exclude tests directories and deprecated modules that can use @attr.s
        exclude: |
          (?x)^(
            .*tests.* |
            client/python/src/openlineage/client/facet\.py |
            client/python/src/openlineage/client/run\.py
          )$
      - id: check-python-generated-imports
        name: Check python imports from generated modules
        description: "Checks if objects are correctly imported in python from event_v2 and facet_v2 modules"
        language: system
        entry:
          bash -c 'grep -n -E "from openlineage\.client\.generated" "$@" && exit 1 || rc=$?; if [ $rc -eq 1 ]; then exit
          0; else exit $rc; fi' --
        files: "\\.py$"
        # Exclude internal modules that must import this way
        exclude: |
          (?x)^(
            client/python/src/openlineage/client/generated/.* |
            client/python/src/openlineage/client/facet_v2\.py |
            client/python/src/openlineage/client/event_v2\.py |
            client/python/src/openlineage/client/generator/base\.py |
            client/python/tests/generator/test_base\.py
          )$
      - id: prettier
        name: prettier
        description: ""
        entry: prettier --write --ignore-unknown
        files: ^spec/|\.ts$|\.tsx$|^website.*\.js$|^website.*\.jsx$|\.css$|^\..*\.yaml$|\^\..*\.yml$|^integration/.*\.json$
        exclude: run_results\.json|manifest\.json|catalog\.json|metadata/.*\.json|bigquery/.*\.json|data/great_expectations/|integration/airflow/tests/extractors/|test_data/serde/
        args: ["--print-width=120", "--prose-wrap=always"]
        language: node
        types: [text]
        require_serial: false
        additional_dependencies: ["prettier@3.5.2"]
      - id: check_schemas
        name: Check JSON Schema spec files.
        language: golang
        additional_dependencies: ["github.com/santhosh-tekuri/jsonschema/cmd/jv@latest"]
        entry: ./.pre_commit/json-schema/check-spec.sh
        files: ^spec/.*\.json$
        exclude: ^spec/tests/.*$
      - id: test_events
        name: Test events against JSON Schema spec files.
        language: golang
        additional_dependencies: ["github.com/santhosh-tekuri/jsonschema/cmd/jv@latest"]
        entry: ./.pre_commit/json-schema/test-facets.sh
        files: ^spec/facets/.*\.json$
      - id: generate_facets
        name: Generate OpenLineage facets for Python client.
        language: python
        entry: python ./client/python/src/openlineage/client/generator/generate.py
        files: ^spec/.*\.json$|^client/python/src/openlineage/client/facet.*\.py$|^client/python/src/openlineage/client/event_v2\.py$|^client/python/src/openlineage/client/generat.*|^client/python/redact_fields\.yml$
        exclude: ^spec/tests/.*$
        pass_filenames: false
        additional_dependencies: ["ruff==0.12.10", "click", "datamodel-code-generator==0.33.0"]
      - id: mypy-client-python
        name: mypy type check - Python client
        language: system
        entry: bash -c 'cd client/python && uv sync --extra dev && uv run mypy --explicit-package-bases src'
        files: ^client/python/src/.*\.py$
        pass_filenames: false
      - id: mypy-integration-common
        name: mypy type check - Integration common
        language: system
        entry: bash -c 'cd integration/common && uv sync --extra dev && uv run mypy --ignore-missing-imports src'
        files: ^integration/common/src/.*\.py$
        pass_filenames: false
      - id: mypy-integration-airflow
        name: mypy type check - Airflow integration
        language: system
        entry: bash -c 'cd integration/airflow && uv sync --extra dev && uv run mypy --ignore-missing-imports src'
        files: ^integration/airflow/src/.*\.py$|^integration/airflow/openlineage/.*\.py$
        pass_filenames: false
      - id: mypy-integration-dbt
        name: mypy type check - dbt integration
        language: system
        entry: bash -c 'cd integration/dbt && uv sync --extra dev && uv run mypy --ignore-missing-imports src'
        files: ^integration/dbt/src/.*\.py$|^integration/dbt/openlineage/.*\.py$
        pass_filenames: false
      - id: check_facets_redactions
        name: Check if all Facets have redacted fields defined
        language: python
        additional_dependencies: ["pyyaml"]
        entry: python ./.pre_commit/check-redactions.py
        always_run: true
        pass_filenames: false
      - id: spec-changes
        name: Verify spec changes committed to website
        language: script
        files: ^spec/
        exclude: ".*tests.*"
        entry: .pre_commit/run-spec-snapshot.sh
        pass_filenames: false
      - id: pmd-client-java
        name: pmd-client-java
        description: "Runs the PMD static code analyzer - Java client."
        language: script
        entry: .pre_commit/run-pmd.sh --java-version 17 --ruleset-file client/java/pmd-openlineage.xml
        files: ^client/java/src/.*\.java$
        exclude: ".*test.*"
        require_serial: true
      - id: pmd-flink
        name: pmd-flink
        description: "Runs the PMD static code analyzer - Flink"
        language: script
        entry: .pre_commit/run-pmd.sh --java-version 17 --ruleset-file integration/flink/pmd-openlineage.xml
        files: ^integration/flink/.*\.java$
        exclude: ".*test.*"
        require_serial: true
      - id: pmd-spark
        name: pmd-spark
        description: "Runs the PMD static code analyzer - Spark."
        language: script
        entry: .pre_commit/run-pmd.sh --java-version 17 --ruleset-file integration/spark/pmd-openlineage.xml
        files: ^integration/spark/.*\.java$
        exclude: ".*test.*"
        require_serial: true
      - id: spotless-client-java
        name: spotless-client-java
        description: "Runs the Spotless formatter - Java client."
        language: system
        entry: .pre_commit/run-spotless.sh --java-version 17 --location client/java
        files: ^client/java/src/.*\.java$
        exclude: ".*test.*"
        pass_filenames: false
      - id: spotless-integration-spark
        name: spotless-integration-spark
        description: "Runs the Spotless formatter - Spark."
        language: system
        entry: .pre_commit/run-spotless.sh --java-version 17 --location integration/spark
        files: ^integration/spark/.*\.java$
        exclude: ".*test.*"
        pass_filenames: false
default_language_version:
  python: "3.10"

name: Version documentation

on:
  release:
    types: [published]

permissions:
  id-token: write

jobs:
  site-deploy:
    name: Build and Publish To openlineage-site repo
    runs-on: ubuntu-latest
    environment: openlineage-site-push
    steps:
      - uses: actions/checkout@v4
        with:
          path: 'source'
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/checkout@v4
        with:
          repository: 'OpenLineage/openlineage-site'
          path: 'target'
          token:  ${{ secrets.ACTIONS_GITHUB_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: source/website/package-lock.json
      - name: Install dependencies
        run:  |
          cd target
          yarn install --frozen-lockfile
      - name: Generate release notes
        run: |
          cd target
          python scripts/create_release_notes.py '${{ github.event.release.tag_name }}' '${{ github.event.release.published_at }}' '${{ github.event.release.body }}'
      - name: Generate new version
        run: |
          echo latest version is ${{ github.event.release.tag_name }}
          cd target
          if [ -d "versioned_docs/version-${{ github.event.release.tag_name }}" ]
          then
            echo "Version already exists. skipping"
          else
            echo "Generating version ${{ github.event.release.tag_name }}"
            yarn run docusaurus docs:version ${{ github.event.release.tag_name }}
          fi
      - name: Push target repo
        run: |
          cd target
          git config user.name "GitHub Action Website Snapshot"
          git config user.email "<>"
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Generating new version $GITHUB_REF_NAME"
            git push
          fi
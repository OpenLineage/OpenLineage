[tox]
requires =
    tox>=4.2
env_list =
    py312
    py311
    py310
    py39
    py38
    type
skip_missing_interpreters = true

[testenv]
description = run the unit tests with pytest under {basepython}
package = wheel
wheel_build_env = .pkg
extras =
    kafka
    test
set_env =
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
    COVERAGE_PROCESS_START = {toxinidir}/setup.cfg
    _COVERAGE_SRC = {envsitepackagesdir}/sphinx_argparse_cli
commands =
    pytest {tty:--color=yes} {posargs: \
      --cov openlineage --cov {toxinidir}{/}tests \
      --junitxml {toxworkdir}{/}junit.{envname}.xml \
      --cov-config=pyproject.toml --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{envtmpdir}{/}htmlcov --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml \
      tests}

[testenv:type]
description = run type check on code base
deps =
    mypy==1.3
    numpy==1.24.3
    types-PyYAML==6.0.12.10
    types-python-dateutil==2.8.19.13
    types-requests==2.31.0.1
    types-setuptools==68.0.0.1
set_env =
    {tty:MYPY_FORCE_COLOR = 1}
commands =
    mypy --namespace-packages --explicit-package-bases openlineage

[testenv:dev]
description = generate a DEV environment
package = editable
extras =
    kafka
    test
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

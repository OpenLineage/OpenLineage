[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling>=1.17",
]

[project]
name = "openlineage-python"
version = "1.5.0"
description = "OpenLineage Python Client"
readme = "README.md"
keywords = [
  "openlineage",
]
authors = [{ name = "OpenLineage", email = "info@openlineage.io" }]
requires-python = ">=3.8"
classifiers = [
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "attrs>=20.0",
  "python-dateutil>=2.8.2",
  "pyyaml>=5.4",
  "requests>=2.20.0",
]
optional-dependencies.kafka = [
  "confluent-kafka>=2.1.1",
]
optional-dependencies.test = [
  "covdefaults>=2.3",
  "pytest>=7.3.1",
  "pytest-cov>=4.1",
  "pytest-mock>=3.10",
  "pyyaml>=5.4",
]

[tool.hatch.build]
exclude = [".idea", ".ruff_cache", ".gitignore", "setup.cfg"]
targets.wheel = {packages = ["openlineage"]}

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
report.fail_under = 91
run.parallel = true
run.plugins = ["covdefaults"]

[tool.mypy]
disable_error_code = "no-redef"
show_error_codes = true
overrides = [
  { ignore_missing_imports = true, module = [
  "confluent_kafka.*",
] } ]
strict = true

[tool.black]
line-length = 100

[tool.ruff]
select = [
    "E", # pyflakes
    "F", # pycodestyle error
    "W", # pycodestyle warning
    "C90", # mccabe
    "I", # isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "YTT", # flake8-2020
    "ANN", # flake8-annotations
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "COM", # flake8-commas
    "T10", # flake8-debugger
    "EM", # flake8-errmsg
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PT", # flake8-pytest-style
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
    "PGH", # pygrep hooks
    "PL", # pylint
    "TRY", # tryceratops
    "FLY", # flynt
    "RUF", # Ruff
]
line-length = 100
target-version = "py38"
isort = { known-first-party = ["publication_set", "tests"] }
namespace-packages = ["openlineage/client"]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "S101", # Use of `assert` detected
    "ANN102", # Missing type annotation for `cls` in classmethod

]
